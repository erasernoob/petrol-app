name: Release Build

on:
  push:
    # tags:
      # - 'v*'
    branches:
      master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            tauri-target: deb
            ext: deb
          - os: macos-latest
            tauri-target: app
            ext: app.tar.gz
          - os: windows-latest
            tauri-target: msi
            ext: msi
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.12.3  # 指定 pnpm 版本，可以根据需要修改

    - name: Check pnpm installation
      run:  pnpm --version

    # 安装 Node.js 和 pnpm
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'  # 确保缓存 pnpm

    # 安装 Python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 安装 Rust (Windows 需要额外处理)
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        targets: |
          ${{ contains(matrix.os, 'windows') && 'x86_64-pc-windows-msvc' || '' }}

 
    - name: Build Backend
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          cd scripts
          backend.bat
        else
          cd scripts
          chmod +x backend.sh
          ./backend.sh
        fi
      shell: bash

    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ matrix.os == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

    - name: install dependencies (ubuntu only)
      if: ${{matrix.os == 'ubuntu-22.04'}} 
      run: |
          sudo apt-get update
          sudo apt-get install -y \
          libwebkit2gtk-4.0-dev \
          libappindicator3-dev \
          librsvg2-dev \
          patchelf \
          libgobject-2.0-dev  # 🔥 解决 `gobject-2.0` 缺失的问题

    # 安装前端依赖
    - name: Install Frontend Dependencies
      working-directory: ./src
      run: pnpm install  # 使用 pnpm 安装前端依赖

    # 构建前端
    - name: Build Frontend
      working-directory: ./src
      run: pnpm build  # 使用 pnpm 构建前端

    # Tauri 构建
    - name: Build Tauri
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: petrol-app-v__VERSION__
        releaseName: 'Release v__VERSION__'
        releaseBody: 'Auto-generated release'
        distDir: ../dist
        configPath: ./src-tauri/tauri.conf.json

    # 重命名输出文件
    - name: Rename Artifacts
      run: |
        mkdir release
        mv src-tauri/target/release/*.${{ matrix.ext }} release/
        mv src-tauri/target/release/bundle/*/*.app release/  # macOS

    # 上传制品
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: petrol-app-${{ matrix.os }}
        path: release/*