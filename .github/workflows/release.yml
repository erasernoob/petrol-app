name: Release Build

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            tauri-target: deb
            ext: deb
          - os: macos-latest
            tauri-target: app
            ext: app.tar.gz
          - os: windows-latest
            tauri-target: msi
            ext: msi
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 1. 安装 pnpm
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.12.3

    # 2. 配置 Node.js 和缓存
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    # 3. 安装 Python
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 4. 安装 Rust（合并步骤）
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: |
          ${{ 
            matrix.os == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' ||
            matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || 
            ''
          }}

    # 5. Ubuntu 系统依赖
    - name: Install Linux Dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwebkit2gtk-4.0-dev \
          libappindicator3-dev \
          librsvg2-dev \
          patchelf

    # 6. 构建后端
    - name: Build Backend
      run: |
        cd scripts
        if [ "$RUNNER_OS" = "Windows" ]; then
          cmd /c backend.bat
        else
          chmod +x backend.sh
          ./backend.sh
        fi

    # 7. 前端依赖安装
    - name: Install Frontend Dependencies
      working-directory: ./src
      run: pnpm install

    # 8. 前端构建
    - name: Build Frontend
      working-directory: ./src
      run: pnpm build

    # 9. Tauri 构建（关键修正）
    - name: Build Tauri
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        target: ${{ matrix.tauri-target }}  # 添加目标平台
        configPath: src-tauri/tauri.conf.json
        distDir: ../dist  # 匹配前端实际输出目录

    # 10. 处理制品
    - name: Prepare Artifacts
      run: |
        mkdir -p release
        # Windows
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp src-tauri/target/release/*.msi release/
        # macOS
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          find src-tauri/target/release -name '*.app' -exec cp -r {} release \;
        # Linux
        else
          cp src-tauri/target/release/*.deb release/
        fi

    # 11. 上传制品
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: petrol-app-${{ matrix.os }}
        path: release/*